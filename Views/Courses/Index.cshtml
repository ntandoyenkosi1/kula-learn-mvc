@model IEnumerable<KulaMVC.Models.Course>
@using Markdig
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
}
<div role="alert" class="fade custom-alert alert alert-primary show">
    <div class="alert-heading h4">
        <h2><b>Welcome to Kula Learn</b></h2>
    </div>
</div>
<div style="background-color: white;" class="page-home shadow p-3 mb-5 rounded">
    <div class="card-group">
        <div class="card">
            <img class="card-img-top img-decoration rounded mx-auto d-block" src="https://i.ibb.co/ZBYYGj0/course.png">
            <div class="card-body">
                <div class="align-center card-title h5">Browse</div>
                <p class="align-center card-text">
                <p>We offer beginner and more advanced courses.</p>
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Instructor"))
                    {
                    <a asp-action="Create" class="btn wide wider">Create New Course</a>
                    }
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                    {
                    <a asp-action="Create" class="btn wide wider">Create New Course</a>
                    }
                </p>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="" id="cards-li">
            @foreach (var item in Model)
            {
                <div style="background-color: white;" class="shadow p-3 mb-5 rounded offset">
                    <h3>@Html.DisplayFor(modelItem => item.title)</h3>
                    <img src="@item.imageUrl" class="rounded mx-auto d-block" style="max-height: 115px; width: 70%;">
                    @{
                        var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
                        var hString = Markdown.ToHtml(@item.shortDescription, pipeline);
                        <div>@Html.Raw(hString)</div>
                    }
                    <div>
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Student"))
                        {
                            <a asp-route-collectionID="@item.ID" asp-controller="Modules" asp-action="Preview"
                        class="btn wide wider">Enroll</a>
                        }
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Instructor"))
                        {
                            <a asp-route-collectionID="@item.ID" asp-controller="Modules" asp-action="Preview"
                        class="btn wide wider">Preview</a>
                            <a asp-route-id="@item.ID" asp-action="Edit" class="btn wide wider">Edit</a>
                        }
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <a asp-route-collectionID="@item.ID" asp-controller="Modules" asp-action="Preview"
                        class="btn wide wider">Preview</a>
                            <a asp-route-id="@item.ID" asp-action="Edit" class="btn wide wider">Edit</a>
                            <a asp-route-id="@item.ID" asp-action="Delete" class="btn wide wider">Delete</a>
                        }
                    </div>
                    <span>Created at:
                        @{
                            System.DateTime dtDateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc);
                            dtDateTime = dtDateTime.AddSeconds(item.createdAt).ToLocalTime();
                        }
                        @dtDateTime
                    </span><span><br>Last modified by: Instructor</span>
                </div>
            }
        </div>
    </div>
